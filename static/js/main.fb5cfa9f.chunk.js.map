{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","sortGoodsByAlphabet","setState","sortGoodsByLength","reverseGoods","resetGoods","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfIC,IAAaJ,EAASO,UACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1CN,IAAaJ,EAASY,QACxBN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGvCR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,oBAAsB,WACpB,EAAKC,SAAS,CAAEjB,SAAUJ,EAASO,YAPvC,EAUEe,kBAAoB,WAClB,EAAKD,SAAS,CAAEjB,SAAUJ,EAASY,UAXvC,EAcEW,aAAe,WACb,EAAKF,UAAS,SAACH,GAAD,MAAY,CACxBb,YAAaa,EAAMb,gBAhBzB,EAoBEmB,WAAa,WACX,EAAKH,SAAS,CACZjB,SAAUJ,EAASmB,KACnBd,YAAY,KAvBlB,4CA2BE,WACE,MAGIoB,KAAKP,MAFPd,EADF,EACEA,SACAC,EAFF,EAEEA,WAGF,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEtB,IAAaJ,EAASO,SAClB,iBACA,0BAENqB,QAASH,KAAKL,oBAPhB,iCAYA,wBACEO,KAAK,SACLD,UACEtB,IAAaJ,EAASY,OAClB,iBACA,0BAENgB,QAASH,KAAKH,kBAPhB,4BAYA,wBACEK,KAAK,SACLD,WACiB,IAAfrB,EACI,iBACA,0BAENuB,QAASH,KAAKF,aAPhB,sBAYEnB,GAAYC,IACZ,wBACEsB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,WAHhB,sBAWJ,6BACE,6BACGtB,EAAkBD,EAAiB,CAAEG,WAAUC,eAAcwB,KAC5D,SAACC,GACC,OACE,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBA1FzB,GAAyBC,IAAMC,WCtD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fb5cfa9f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortGoodsByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortGoodsByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverseGoods = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetGoods = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const {\n      sortType,\n      isReversed,\n    } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              sortType === SortType.ALPHABET\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={this.sortGoodsByAlphabet}\n          >\n            Sort alphabetically\n\n          </button>\n          <button\n            type=\"button\"\n            className={\n              sortType === SortType.LENGTH\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={this.sortGoodsByLength}\n          >\n            Sort by length\n\n          </button>\n          <button\n            type=\"button\"\n            className={\n              isReversed === true\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={this.reverseGoods}\n          >\n            Reverse\n\n          </button>\n          {(sortType || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetGoods}\n            >\n              Reset\n\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, { sortType, isReversed }).map(\n              (good) => {\n                return (\n                  <li\n                    key={good}\n                    data-cy=\"Good\"\n                  >\n                    {good}\n                  </li>\n                );\n              },\n            )}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}